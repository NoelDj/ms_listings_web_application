stages:
  - static
  - build
  - deploy

static:
  stage: static
  image: python:3.10-alpine
  before_script:
    - pip install --upgrade pip
    - pip install -r sqa-requirements.txt
    - apk update && apk add shellcheck
  script:
    - pylama .
    - djlint .
    - pip-audit
    - yamllint *.yml
    - shellcheck *.sh

build:
  stage: build
  image: registry.gitlab.com/henrikstroem/composer:latest
  services:
    - docker:18.09.7-dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u gitlab-ci-token -p "$GITLAB_CI_TOKEN" "$CI_REGISTRY"
    - echo POSTGRES_USER_URL=$POSTGRES_USER_URL >> env_test
    - echo POSTGRES_PASSWORD=$POSTGRES_PASSWORD >> env_test
    - echo POSTGRES_DB=$POSTGRES_DB >> env_test
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/djangoapp:latest" -f Dockerfile.djangoapp .
    - docker push "$CI_REGISTRY_IMAGE/djangoapp:latest"
    - docker build -t "$CI_REGISTRY_IMAGE/astroapp:latest" -f Dockerfile.astroapp .
    - docker push "$CI_REGISTRY_IMAGE/astroapp:latest"
    - export RTE=test
    - docker-compose up --abort-on-container-exit --exit-code-from djangoapp

deploy:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$VM_IPADDRESS
    - export RTE=dev
    - sh "~/ms_listings_project/deploy.sh"
  only:
    - main
